error.bar(x=1:6,y=MLOW[ord],upper=Q75LOW[ord]-MLOW[ord],lower=MLOW[ord]-Q25LOW[ord],lwd=lwdg,col="grey85")
error.bar(x=1:6,y=MLOW[ord],upper=Q75LOW2[ord]-MLOW[ord],lower=MLOW[ord]-Q25LOW2[ord],lwd=lwdc,col="grey50")
points(MLOW[ord],pch=19,type="b")
### MID NEUR
MMID=apply(cMID.REP,2,median)
meanMID=apply(log(cMID.REP+1),2,mean)
Q25MID=apply(cMID.REP,2,quantile,lowq)
Q75MID=apply(cMID.REP,2,quantile,highq)
Q25MID2=apply(cMID.REP,2,quantile,lowq2)
Q75MID2=apply(cMID.REP,2,quantile,highq2)
plot(1,0,col=0,xlim=c(1,6.5),ylim=c(0,12),xlab="",bty="n",ylab="",yaxt="n",xaxt="n",cex.lab=1.3,cex.axis=1.3,main="MID")#yaxt='n',ylab='',bty="n")#,ylab="centrality index")
axis(1,pos=0,at=1:6,labels=strletvec[ord],cex.axis=1.25)
error.bar(x=1:6,y=MMID[ord],upper=Q75MID[ord]-MMID[ord],lower=MMID[ord]-Q25MID[ord],lwd=lwdg,col="grey85")
error.bar(x=1:6,y=MMID[ord],upper=Q75MID2[ord]-MMID[ord],lower=MMID[ord]-Q25MID2[ord],lwd=lwdc,col="grey50")
points(MMID[ord],pch=19,type="b")
### HIGH NEUR
MHIGH=apply(cHIGH.REP,2,median)
meanHIGH=apply(log(cHIGH.REP+1),2,mean)
Q25HIGH=apply(cHIGH.REP,2,quantile,lowq)
Q75HIGH=apply(cHIGH.REP,2,quantile,highq)
Q25HIGH2=apply(cHIGH.REP,2,quantile,lowq2)
Q75HIGH2=apply(cHIGH.REP,2,quantile,highq2)
plot(1,0,col=0,xlim=c(1,6.5),ylim=c(0,12),xlab="",bty="n",ylab="",yaxt="n",xaxt="n",cex.lab=1.3,cex.axis=1.3,main="HIGH")#yaxt='n',ylab='',bty="n")#,ylab="centrality index")
axis(1,pos=0,at=1:6,labels=strletvec[ord],cex.axis=1.25)
error.bar(x=1:6,y=MHIGH[ord],upper=Q75HIGH[ord]-MHIGH[ord],lower=MHIGH[ord]-Q25HIGH[ord],lwd=lwdg,col="grey85")
error.bar(x=1:6,y=MHIGH[ord],upper=Q75HIGH2[ord]-MHIGH[ord],lower=MHIGH[ord]-Q25HIGH2[ord],lwd=lwdc,col="grey50")
points(MHIGH[ord],pch=19,type="b")
dev.off()
figure
pdf("Figure4.pdf",useDingbats=F)
error.bar <- function(x, y, upper, lower=upper, length=0.0,...){
if(length(x) != length(y) | length(y) !=length(lower) | length(lower) != length(upper))
stop("vectors must be same length")
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
letvec=c(64+3,64+5,64+23,64+6,64+19,64+18)#letters
strletvec=c("C","E","W","F","S","R")
par(mfrow=c(1,3),mar=c(4,4.5,1,2))
lwdg=1.5
lwdc=2
lowq=.025
highq=.975
lowq2=.25
highq2=.75
### LOW NEUR
MLOW=apply(cLOW.REP,2,median)
Q25LOW=apply(cLOW.REP,2,quantile,lowq)
Q75LOW=apply(cLOW.REP,2,quantile,highq)
Q25LOW2=apply(cLOW.REP,2,quantile,lowq2)
Q75LOW2=apply(cLOW.REP,2,quantile,highq2)
ord=c(1,5,6,3,4,2)
plot(1,0,col=0,xlim=c(1,6.5),ylim=c(0,12),xlab="",bty="n",ylab="Centrality index (betweenness)",xaxt="n",cex.lab=1.3,cex.axis=1.5,main="LOW")#yaxt='n',ylab='',bty="n")#,ylab="centrality index")
axis(1,pos=0,at=1:6,labels=strletvec[ord],cex.axis=1.25)
error.bar(x=1:6,y=MLOW[ord],upper=Q75LOW[ord]-MLOW[ord],lower=MLOW[ord]-Q25LOW[ord],lwd=lwdg,col="grey85")
error.bar(x=1:6,y=MLOW[ord],upper=Q75LOW2[ord]-MLOW[ord],lower=MLOW[ord]-Q25LOW2[ord],lwd=lwdc,col="grey50")
points(MLOW[ord],pch=19,type="b")
### MID NEUR
MMID=apply(cMID.REP,2,median)
meanMID=apply(log(cMID.REP+1),2,mean)
Q25MID=apply(cMID.REP,2,quantile,lowq)
Q75MID=apply(cMID.REP,2,quantile,highq)
Q25MID2=apply(cMID.REP,2,quantile,lowq2)
Q75MID2=apply(cMID.REP,2,quantile,highq2)
plot(1,0,col=0,xlim=c(1,6.5),ylim=c(0,12),xlab="",bty="n",ylab="",yaxt="n",xaxt="n",cex.lab=1.3,cex.axis=1.3,main="MID")#yaxt='n',ylab='',bty="n")#,ylab="centrality index")
axis(1,pos=0,at=1:6,labels=strletvec[ord],cex.axis=1.25)
error.bar(x=1:6,y=MMID[ord],upper=Q75MID[ord]-MMID[ord],lower=MMID[ord]-Q25MID[ord],lwd=lwdg,col="grey85")
error.bar(x=1:6,y=MMID[ord],upper=Q75MID2[ord]-MMID[ord],lower=MMID[ord]-Q25MID2[ord],lwd=lwdc,col="grey50")
points(MMID[ord],pch=19,type="b")
### HIGH NEUR
MHIGH=apply(cHIGH.REP,2,median)
meanHIGH=apply(log(cHIGH.REP+1),2,mean)
Q25HIGH=apply(cHIGH.REP,2,quantile,lowq)
Q75HIGH=apply(cHIGH.REP,2,quantile,highq)
Q25HIGH2=apply(cHIGH.REP,2,quantile,lowq2)
Q75HIGH2=apply(cHIGH.REP,2,quantile,highq2)
plot(1,0,col=0,xlim=c(1,6.5),ylim=c(0,12),xlab="",bty="n",ylab="",yaxt="n",xaxt="n",cex.lab=1.3,cex.axis=1.3,main="HIGH")#yaxt='n',ylab='',bty="n")#,ylab="centrality index")
axis(1,pos=0,at=1:6,labels=strletvec[ord],cex.axis=1.25)
error.bar(x=1:6,y=MHIGH[ord],upper=Q75HIGH[ord]-MHIGH[ord],lower=MHIGH[ord]-Q25HIGH[ord],lwd=lwdg,col="grey85")
error.bar(x=1:6,y=MHIGH[ord],upper=Q75HIGH2[ord]-MHIGH[ord],lower=MHIGH[ord]-Q25HIGH2[ord],lwd=lwdc,col="grey50")
points(MHIGH[ord],pch=19,type="b")
dev.off()
pdf("Figure4.pdf",useDingbats=F)
error.bar <- function(x, y, upper, lower=upper, length=0.0,...){
if(length(x) != length(y) | length(y) !=length(lower) | length(lower) != length(upper))
stop("vectors must be same length")
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
letvec=c(64+3,64+5,64+23,64+6,64+19,64+18)#letters
strletvec=c("C","E","W","F","S","R")
par(mfrow=c(1,3),mar=c(4,4.5,1,2))
lwdg=1.5
lwdc=2
lowq=.025
highq=.975
lowq2=.25
highq2=.75
### LOW NEUR
MLOW=apply(cLOW.REP,2,median)
Q25LOW=apply(cLOW.REP,2,quantile,lowq)
Q75LOW=apply(cLOW.REP,2,quantile,highq)
Q25LOW2=apply(cLOW.REP,2,quantile,lowq2)
Q75LOW2=apply(cLOW.REP,2,quantile,highq2)
ord=c(1,5,6,3,4,2)
plot(1,0,col=0,xlim=c(1,6.5),ylim=c(0,12),xlab="",bty="n",ylab="Centrality index (betweenness)",xaxt="n",cex.lab=1.3,cex.axis=1.5,main="LOW")#yaxt='n',ylab='',bty="n")#,ylab="centrality index")
axis(1,pos=0,at=1:6,labels=strletvec[ord],cex.axis=1.25)
error.bar(x=1:6,y=MLOW[ord],upper=Q75LOW[ord]-MLOW[ord],lower=MLOW[ord]-Q25LOW[ord],lwd=lwdg,col="grey85")
error.bar(x=1:6,y=MLOW[ord],upper=Q75LOW2[ord]-MLOW[ord],lower=MLOW[ord]-Q25LOW2[ord],lwd=lwdc,col="grey50")
points(MLOW[ord],pch=19,type="b")
### MID NEUR
MMID=apply(cMID.REP,2,median)
meanMID=apply(log(cMID.REP+1),2,mean)
Q25MID=apply(cMID.REP,2,quantile,lowq)
Q75MID=apply(cMID.REP,2,quantile,highq)
Q25MID2=apply(cMID.REP,2,quantile,lowq2)
Q75MID2=apply(cMID.REP,2,quantile,highq2)
plot(1,0,col=0,xlim=c(1,6.5),ylim=c(0,12),xlab="",bty="n",ylab="",yaxt="n",xaxt="n",cex.lab=1.3,cex.axis=1.3,main="MID")#yaxt='n',ylab='',bty="n")#,ylab="centrality index")
axis(1,pos=0,at=1:6,labels=strletvec[ord],cex.axis=1.25)
error.bar(x=1:6,y=MMID[ord],upper=Q75MID[ord]-MMID[ord],lower=MMID[ord]-Q25MID[ord],lwd=lwdg,col="grey85")
error.bar(x=1:6,y=MMID[ord],upper=Q75MID2[ord]-MMID[ord],lower=MMID[ord]-Q25MID2[ord],lwd=lwdc,col="grey50")
points(MMID[ord],pch=19,type="b")
### HIGH NEUR
MHIGH=apply(cHIGH.REP,2,median)
meanHIGH=apply(log(cHIGH.REP+1),2,mean)
Q25HIGH=apply(cHIGH.REP,2,quantile,lowq)
Q75HIGH=apply(cHIGH.REP,2,quantile,highq)
Q25HIGH2=apply(cHIGH.REP,2,quantile,lowq2)
Q75HIGH2=apply(cHIGH.REP,2,quantile,highq2)
plot(1,0,col=0,xlim=c(1,6.5),ylim=c(0,12),xlab="",bty="n",ylab="",yaxt="n",xaxt="n",cex.lab=1.3,cex.axis=1.3,main="HIGH")#yaxt='n',ylab='',bty="n")#,ylab="centrality index")
axis(1,pos=0,at=1:6,labels=strletvec[ord],cex.axis=1.25)
error.bar(x=1:6,y=MHIGH[ord],upper=Q75HIGH[ord]-MHIGH[ord],lower=MHIGH[ord]-Q25HIGH[ord],lwd=lwdg,col="grey85")
error.bar(x=1:6,y=MHIGH[ord],upper=Q75HIGH2[ord]-MHIGH[ord],lower=MHIGH[ord]-Q25HIGH2[ord],lwd=lwdc,col="grey50")
points(MHIGH[ord],pch=19,type="b")
dev.off()
pdf("Figure4.pdf",useDingbats=F)
error.bar <- function(x, y, upper, lower=upper, length=0.0,...){
if(length(x) != length(y) | length(y) !=length(lower) | length(lower) != length(upper))
stop("vectors must be same length")
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
letvec=c(64+3,64+5,64+23,64+6,64+19,64+18)#letters
strletvec=c("C","E","W","F","S","R")
par(mfrow=c(1,3),mar=c(4,4.5,1,2))
lwdg=1.5
lwdc=2
lowq=.025
highq=.975
lowq2=.25
highq2=.75
### LOW NEUR
MLOW=apply(cLOW.REP,2,median)
Q25LOW=apply(cLOW.REP,2,quantile,lowq)
Q75LOW=apply(cLOW.REP,2,quantile,highq)
Q25LOW2=apply(cLOW.REP,2,quantile,lowq2)
Q75LOW2=apply(cLOW.REP,2,quantile,highq2)
ord=c(1,5,6,3,4,2)
plot(1,0,col=0,xlim=c(1,6.5),ylim=c(0,12),xlab="",bty="n",ylab="Centrality index (betweenness)",xaxt="n",cex.lab=1.3,cex.axis=1.5,main="LOW")#yaxt='n',ylab='',bty="n")#,ylab="centrality index")
axis(1,pos=0,at=1:6,labels=strletvec[ord],cex.axis=1.25)
error.bar(x=1:6,y=MLOW[ord],upper=Q75LOW[ord]-MLOW[ord],lower=MLOW[ord]-Q25LOW[ord],lwd=lwdg,col="grey85")
error.bar(x=1:6,y=MLOW[ord],upper=Q75LOW2[ord]-MLOW[ord],lower=MLOW[ord]-Q25LOW2[ord],lwd=lwdc,col="grey50")
points(MLOW[ord],pch=19,type="b")
### MID NEUR
MMID=apply(cMID.REP,2,median)
meanMID=apply(log(cMID.REP+1),2,mean)
Q25MID=apply(cMID.REP,2,quantile,lowq)
Q75MID=apply(cMID.REP,2,quantile,highq)
Q25MID2=apply(cMID.REP,2,quantile,lowq2)
Q75MID2=apply(cMID.REP,2,quantile,highq2)
plot(1,0,col=0,xlim=c(1,6.5),ylim=c(0,12),xlab="",bty="n",ylab="",yaxt="n",xaxt="n",cex.lab=1.3,cex.axis=1.3,main="MID")#yaxt='n',ylab='',bty="n")#,ylab="centrality index")
axis(1,pos=0,at=1:6,labels=strletvec[ord],cex.axis=1.25)
error.bar(x=1:6,y=MMID[ord],upper=Q75MID[ord]-MMID[ord],lower=MMID[ord]-Q25MID[ord],lwd=lwdg,col="grey85")
error.bar(x=1:6,y=MMID[ord],upper=Q75MID2[ord]-MMID[ord],lower=MMID[ord]-Q25MID2[ord],lwd=lwdc,col="grey50")
points(MMID[ord],pch=19,type="b")
### HIGH NEUR
MHIGH=apply(cHIGH.REP,2,median)
meanHIGH=apply(log(cHIGH.REP+1),2,mean)
Q25HIGH=apply(cHIGH.REP,2,quantile,lowq)
Q75HIGH=apply(cHIGH.REP,2,quantile,highq)
Q25HIGH2=apply(cHIGH.REP,2,quantile,lowq2)
Q75HIGH2=apply(cHIGH.REP,2,quantile,highq2)
plot(1,0,col=0,xlim=c(1,6.5),ylim=c(0,12),xlab="",bty="n",ylab="",yaxt="n",xaxt="n",cex.lab=1.3,cex.axis=1.3,main="HIGH")#yaxt='n',ylab='',bty="n")#,ylab="centrality index")
axis(1,pos=0,at=1:6,labels=strletvec[ord],cex.axis=1.25)
error.bar(x=1:6,y=MHIGH[ord],upper=Q75HIGH[ord]-MHIGH[ord],lower=MHIGH[ord]-Q25HIGH[ord],lwd=lwdg,col="grey85")
error.bar(x=1:6,y=MHIGH[ord],upper=Q75HIGH2[ord]-MHIGH[ord],lower=MHIGH[ord]-Q25HIGH2[ord],lwd=lwdc,col="grey50")
points(MHIGH[ord],pch=19,type="b")
dev.off()
pdf("Figure1.pdf", width=6.83,height=6.83,useDingbats=F)
E=cbind(from=rep(1:6,each=6),to=rep(1:6,6),weigth=unlist(coef1[,2:7]))
pvals=2*(1-pnorm(abs(unlist(coef1[,2:7]/se.coef1[,2:7]))))
edge.color <- addTrans(ifelse(E[,3]>0, "green3", "red3"), ifelse(pvals<0.05, 255, 0))
qgraph(E,fade=FALSE,layout="circular",labels=c("C","E","W","F","S","R"),lty=ifelse(E[,3]>0,1,5),edge.labels=F,edge.color=edge.color)
dev.off()
###inferring the coefficients or connection strengths for the network from the fitted model1
coef1=data.frame(matrix(unlist(lapply(model1,fixef),use.names=FALSE),byrow=TRUE, ncol=21))
se.coef1=data.frame(matrix(unlist(lapply(model1,se.fixef),use.names=FALSE),byrow=TRUE,ncol=21))
colnames(coef1)=names(fixef(model1[[1]]))
colnames(se.coef1)=names(fixef(model1[[1]]))
rownames(coef1)=columns
rownames(se.coef1)=columns
###making a Figure of the baseline average population network with Qgraph; pvalue<0.05
###Only the coefficients from the columns 2 to 7 (not the intercepts) of the six items are needed. Thus, not the six items with study period or therapy(informat04).
pdf("Figure1.pdf", width=6.83,height=6.83,useDingbats=F)
E=cbind(from=rep(1:6,each=6),to=rep(1:6,6),weigth=unlist(coef1[,2:7]))
pvals=2*(1-pnorm(abs(unlist(coef1[,2:7]/se.coef1[,2:7]))))
edge.color <- addTrans(ifelse(E[,3]>0, "green3", "red3"), ifelse(pvals<0.05, 255, 0))
qgraph(E,fade=FALSE,layout="circular",labels=c("C","E","W","F","S","R"),lty=ifelse(E[,3]>0,1,5),edge.labels=F,edge.color=edge.color)
dev.off()
###Fitting the data with multilevel-VAR method with the lme4 or lmer function
model1=list()
columns=c("opgewkt_","onplplez","pieker","angstig_","somber__","ontspann")
pred1 = "(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1)+st_period+(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):st_period+st_period:informat04+st_period:(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):informat04+(factor(st_period)-1+opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1|subjno)"
for (j in 1:6){
ff=as.formula(paste(columns[j],"~",pred1,sep=""))
model1[[j]]<-lmer(ff,data=networkdataL,control=list(maxIter=800),REML=FALSE)
print(j)
}
BIC1=unlist(lapply(model1,BIC))
sum(BIC1)
###inferring the coefficients or connection strengths for the network from the fitted model1
coef1=data.frame(matrix(unlist(lapply(model1,fixef),use.names=FALSE),byrow=TRUE, ncol=21))
se.coef1=data.frame(matrix(unlist(lapply(model1,se.fixef),use.names=FALSE),byrow=TRUE,ncol=21))
colnames(coef1)=names(fixef(model1[[1]]))
colnames(se.coef1)=names(fixef(model1[[1]]))
rownames(coef1)=columns
rownames(se.coef1)=columns
###making a Figure of the baseline average population network with Qgraph; pvalue<0.05
###Only the coefficients from the columns 2 to 7 (not the intercepts) of the six items are needed. Thus, not the six items with study period or therapy(informat04).
pdf("Figure1.pdf", width=6.83,height=6.83,useDingbats=F)
E=cbind(from=rep(1:6,each=6),to=rep(1:6,6),weigth=unlist(coef1[,2:7]))
pvals=2*(1-pnorm(abs(unlist(coef1[,2:7]/se.coef1[,2:7]))))
edge.color <- addTrans(ifelse(E[,3]>0, "green3", "red3"), ifelse(pvals<0.05, 255, 0))
qgraph(E,fade=FALSE,layout="circular",labels=c("C","E","W","F","S","R"),lty=ifelse(E[,3]>0,1,5),edge.labels=F,edge.color=edge.color)
dev.off()
pred1 = "(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1)+st_period+(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):st_period+st_period:informat04+st_period:(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):informat04+(factor(st_period)-1+opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1|subjno)"
for (j in 1:6){
ff=as.formula(paste(columns[j],"~",pred1,sep=""))
model1[[j]]<-lmerControl(ff,data=networkdataL,control=list(maxIter=800),REML=FALSE)
print(j)
}
model1=list()
columns=c("opgewkt_","onplplez","pieker","angstig_","somber__","ontspann")
pred1 = "(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1)+st_period+(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):st_period+st_period:informat04+st_period:(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):informat04+(factor(st_period)-1+opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1|subjno)"
for (j in 1:6){
ff=as.formula(paste(columns[j],"~",pred1,sep=""))
model1[[j]]<-lmerControl(ff)
print(j)
}
BIC1=unlist(lapply(model1,BIC))
sum(BIC1)
pred1 = "(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1)+st_period+(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):st_period+st_period:informat04+st_period:(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):informat04+(factor(st_period)-1+opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1|subjno)"
for (j in 1:6){
ff=as.formula(paste(columns[j],"~",pred1,sep=""))
model1[[j]]<-lmer(ff,data=networkdataL,control=list(maxIter=800),REML=FALSE)
print(j)
}
BIC1=unlist(lapply(model1,BIC))
sum(BIC1)
pred1 = "(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1)+st_period+(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):st_period+st_period:informat04+st_period:(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):informat04+(factor(st_period)-1+opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1|subjno)"
for (j in 1:6){
ff=as.formula(paste(columns[j],"~",pred1,sep=""))
model1[[j]]<-lme4(ff,data=networkdataL,control=list(maxIter=800),REML=FALSE)
print(j)
}
BIC1=unlist(lapply(model1,BIC))
sum(BIC1)
pred1 = "(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1)+st_period+(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):st_period+st_period:informat04+st_period:(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):informat04+(factor(st_period)-1+opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1|subjno)"
for (j in 1:6){
ff=as.formula(paste(columns[j],"~",pred1,sep=""))
model1[[j]]<-lme4(ff,data=networkdataL,control=list(maxIter=800),REML=FALSE)
print(j)
}
BIC1=unlist(lapply(model1,BIC))
sum(BIC1)
model1=list()
columns=c("opgewkt_","onplplez","pieker","angstig_","somber__","ontspann")
pred1 = "(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1)+st_period+(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):st_period+st_period:informat04+st_period:(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):informat04+(factor(st_period)-1+opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1|subjno)"
for (j in 1:6){
ff=as.formula(paste(columns[j],"~",pred1,sep=""))
model1[[j]]<-lmer(ff,data=networkdataL,control=list(maxIter=800),REML=FALSE)
print(j)
}
BIC1=unlist(lapply(model1,BIC))
sum(BIC1)
pred1 = "(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1)+st_period+(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):st_period+st_period:informat04+st_period:(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):informat04+(factor(st_period)-1+opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1|subjno)"
for (j in 1:6){
ff=as.formula(paste(columns[j],"~",pred1,sep=""))
model1[[j]]<-lmer(ff,data=networkdataL,control=list(),REML=FALSE)
print(j)
}
BIC1=unlist(lapply(model1,BIC))
sum(BIC1)
model1=list()
columns=c("opgewkt_","onplplez","pieker","angstig_","somber__","ontspann")
pred1 = "(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1)+st_period+(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):st_period+st_period:informat04+st_period:(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):informat04+(factor(st_period)-1+opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1|subjno)"
for (j in 1:6){
ff=as.formula(paste(columns[j],"~",pred1,sep=""))
model1[[j]]<-lmer(ff,data=networkdataL,control=list(),REML=FALSE)
print(j)
}
model1=list()
columns=c("opgewkt_","onplplez","pieker","angstig_","somber__","ontspann")
pred1 = "(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1)+st_period+(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):st_period+st_period:informat04+st_period:(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):informat04+(factor(st_period)-1+opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1|subjno)"
for (j in 1:6){
ff=as.formula(paste(columns[j],"~",pred1,sep=""))
model1[[j]]<-lmer(ff,data=networkdataL,control=list(maxIter=800),REML=FALSE)
print(j)
}
BIC1=unlist(lapply(model1,BIC))
sum(BIC1)
###inferring the coefficients or connection strengths for the network from the fitted model1
coef1=data.frame(matrix(unlist(lapply(model1,fixef),use.names=FALSE),byrow=TRUE, ncol=21))
se.coef1=data.frame(matrix(unlist(lapply(model1,se.fixef),use.names=FALSE),byrow=TRUE,ncol=21))
colnames(coef1)=names(fixef(model1[[1]]))
colnames(se.coef1)=names(fixef(model1[[1]]))
rownames(coef1)=columns
rownames(se.coef1)=columns
###making a Figure of the baseline average population network with Qgraph; pvalue<0.05
###Only the coefficients from the columns 2 to 7 (not the intercepts) of the six items are needed. Thus, not the six items with study period or therapy(informat04).
pdf("Figure1.pdf", width=6.83,height=6.83,useDingbats=F)
E=cbind(from=rep(1:6,each=6),to=rep(1:6,6),weigth=unlist(coef1[,2:7]))
pvals=2*(1-pnorm(abs(unlist(coef1[,2:7]/se.coef1[,2:7]))))
edge.color <- addTrans(ifelse(E[,3]>0, "green3", "red3"), ifelse(pvals<0.05, 255, 0))
qgraph(E,fade=FALSE,layout="circular",labels=c("C","E","W","F","S","R"),lty=ifelse(E[,3]>0,1,5),edge.labels=F,edge.color=edge.color)
dev.off()
###Fitting the data with multilevel-VAR method with the lme4 or lmer function
model1=list()
columns=c("opgewkt_","onplplez","pieker","angstig_","somber__","ontspann")
pred1 = "(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1)+st_period+(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):st_period+st_period:informat04+st_period:(opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1):informat04+(factor(st_period)-1+opgewkt_L1+onplplezL1+piekerL1+angstig_L1+somber__L1+ontspannL1|subjno)"
for (j in 1:6){
ff=as.formula(paste(columns[j],"~",pred1,sep=""))
model1[[j]]<-lmer(ff,data=networkdataL,control=list(),REML=FALSE)
print(j)
}
BIC1=unlist(lapply(model1,BIC))
sum(BIC1)
###inferring the coefficients or connection strengths for the network from the fitted model1
coef1=data.frame(matrix(unlist(lapply(model1,fixef),use.names=FALSE),byrow=TRUE, ncol=21))
se.coef1=data.frame(matrix(unlist(lapply(model1,se.fixef),use.names=FALSE),byrow=TRUE,ncol=21))
colnames(coef1)=names(fixef(model1[[1]]))
colnames(se.coef1)=names(fixef(model1[[1]]))
rownames(coef1)=columns
rownames(se.coef1)=columns
###making a Figure of the baseline average population network with Qgraph; pvalue<0.05
###Only the coefficients from the columns 2 to 7 (not the intercepts) of the six items are needed. Thus, not the six items with study period or therapy(informat04).
pdf("Figure1.pdf", width=6.83,height=6.83,useDingbats=F)
E=cbind(from=rep(1:6,each=6),to=rep(1:6,6),weigth=unlist(coef1[,2:7]))
pvals=2*(1-pnorm(abs(unlist(coef1[,2:7]/se.coef1[,2:7]))))
edge.color <- addTrans(ifelse(E[,3]>0, "green3", "red3"), ifelse(pvals<0.05, 255, 0))
qgraph(E,fade=FALSE,layout="circular",labels=c("C","E","W","F","S","R"),lty=ifelse(E[,3]>0,1,5),edge.labels=F,edge.color=edge.color)
dev.off()
######################################################
####### Figure 2 and 3: Individual differences #######
######################################################
###with "VV" the individual differences are taken from the fitted model1, each link now indicates the amount of individual variability
VV=sqrt(t(matrix(unlist(lapply(model1,function(x){VV=diag(VarCorr(x)$subjno[3:8,3:8])})),6,6)))
###the network figure of individual differences
pdf("Figure2.pdf", width=6.83,height=6.83,useDingbats=F)
E=cbind(from=rep(1:6,each=6),to=rep(1:6,6),weigth=as.vector(VV))
edge.color <- addTrans("blue", ifelse(E[,3]>.095, 255, 20))
qgraph(E,fade=FALSE,layout="circular",labels=c("C","E","W","F","S","R"),lty=ifelse(E[,3]>0,1,5),edge.labels=F,edge.color=edge.color)
dev.off()
###Network figure of two individuals; N=1 networks
###First the coefficients for all individuals are inferred
cc=list(model1[[1]],model1[[2]],model1[[3]],model1[[4]],model1[[5]],model1[[6]])
mat.ind=array(0,c(6,6,129))
for (x in 1:129){
for (ii in 1:6){
mat.ind[,ii,x] = as.numeric((fixef(cc[[ii]])[2:7]+ranef(cc[[ii]])$subjno[x,3:8]))
}}
mat.ind
###The networks are made
pdf("Figure3.pdf", width=6.83*2,height=4*2,useDingbats=F)
par(mfcol=1:2)
jj=rep(1:6,each=6)
jk=rep(1:6,6)
E1=data.frame(from=jk,to=jj,weight=as.vector(mat.ind[,,1]))##individual 1 and subject 80 were taken as an example in the paper
qgraph(E1,layout="circular",labels=c("C","E","W","F","S","R"),lty=ifelse(E1[,3]>0,1,5),edge.labels=F,mar=c(5,5,5,5))#,filetype="pdf")
E2=data.frame(from=jk,to=jj,weight=as.vector(mat.ind[,,80]))##individual 1 and subject 80 were taken as an example in the paper
qgraph(E2,layout="circular",labels=c("C","E","W","F","S","R"),lty=ifelse(E2[,3]>0,1,5),edge.labels=F,mar=c(5,5,5,5))#,filetype="pdf")
dev.off()
pdf("Figure3.pdf", width=6.83*2,height=4*2,useDingbats=F)
par(mfcol=1:2)
jj=rep(1:6,each=6)
jk=rep(1:6,6)
E1=data.frame(from=jk,to=jj,weight=as.vector(mat.ind[,,1]))##individual 1 and subject 80 were taken as an example in the paper
qgraph(E1,layout="circular",labels=c("C","E","W","F","S","R"),lty=ifelse(E1[,3]>0,1,5),edge.labels=F,mar=c(5,5,5,5))#,filetype="pdf")
E2=data.frame(from=jk,to=jj,weight=as.vector(mat.ind[,,80]))##individual 1 and subject 80 were taken as an example in the paper
qgraph(E2,layout="circular",labels=c("C","E","W","F","S","R"),lty=ifelse(E2[,3]>0,1,5),edge.labels=F,mar=c(5,5,5,5))#,filetype="pdf")
dev.off()
# Load packages:
library("mlVAR")
library("graphicalVAR")
library("qgraph")
# Read the data:
url <- "http://journals.plos.org/plosone/article/file?id=10.1371/journal.pone.0060188.s004&type=supplementary"
Data <- subset(read.table(url, header = TRUE, sep = ","), st_period == 0)[,-c(4,5,12)]
# Rename with English names:
names(Data) <- c("id","day","beep","cheerful","pleasant","worry","fearful","sad","relaxed")
# Input:
vars <- c("cheerful","pleasant","worry","fearful","sad","relaxed")
idvar <- "id"
# We do not need beepvar and dayvar arguments because the data is neatly pre-processed. Every beep is included even if responses are missing, and a row of NA responses is included between each day.
# Estimator 1: Mplus 8:
res_Mplus <- mlVAR(Data, vars, idvar, lags = 1,
temporal = "correlated", contemporaneous = "fixed",
estimator = "Mplus", nCores = 3)
pdf("Figure6_Mplus.pdf",width=9,height=3)
layout(t(1:3))
plot(res_Mplus, "temporal", layout = "circle", nonsig = "hide", theme = "colorblind", title = "Temporal",
labels = vars, vsize = 20, rule = "and", asize = 10, mar = c(5,5,5,5))
box("figure")
plot(res_Mplus, "contemporaneous", layout = "circle", nonsig = "hide", theme = "colorblind", title = "Contemporaneous",
labels = vars, vsize = 20, rule = "and", asize = 10, mar = c(5,5,5,5))
box("figure")
plot(res_Mplus, "between", layout = "circle", nonsig = "hide",  theme = "colorblind", title = "Between-subjects",
labels = vars, vsize = 20, rule = "and", asize = 10, mar = c(5,5,5,5))
box("figure")
dev.off()
# Estimator 2: two-step mlvar:
res_mlVAR <- mlVAR(Data, vars, idvar, lags = 1,
temporal = "correlated", contemporaneous = "correlated")
pdf("Figure6_mlVAR.pdf",width=9,height=3)
layout(t(1:3))
plot(res_mlVAR, "temporal", layout = "circle", nonsig = "hide", theme = "colorblind", title = "Temporal",
labels = vars, vsize = 20, rule = "and", asize = 10, mar = c(5,5,5,5))
box("figure")
plot(res_mlVAR, "contemporaneous", layout = "circle", nonsig = "hide", theme = "colorblind", title = "Contemporaneous",
labels = vars, vsize = 20, rule = "and", asize = 10, mar = c(5,5,5,5))
box("figure")
plot(res_mlVAR, "between", layout = "circle", nonsig = "hide",  theme = "colorblind", title = "Between-subjects",
labels = vars, vsize = 20, rule = "and", asize = 10, mar = c(5,5,5,5))
box("figure")
dev.off()
# Via graphicalVAR:
library("graphicalVAR")
res_GVAR <- mlGraphicalVAR(Data, vars, idvar = idvar,gamma = 0.25, subjectNetworks = FALSE)
pdf("Figure6_GVAR.pdf",width=9,height=3)
layout(t(1:3))
qgraph(res_GVAR$fixedPDC,  layout = "circle", nonsig = "hide", theme = "colorblind", title = "Temporal",
labels = vars, vsize = 20,  asize = 10, mar = c(5,5,5,5))
box("figure")
qgraph(res_GVAR$fixedPCC,  layout = "circle", nonsig = "hide", rule = "and", theme = "colorblind", title = "Contemporaneous",
labels = vars, vsize = 20, asize = 10, mar = c(5,5,5,5))
box("figure")
qgraph(res_GVAR$betweenNet, layout = "circle", nonsig = "hide", rule = "and", theme = "colorblind", title = "Between-subjects",
labels = vars, vsize = 20,  asize = 10, mar = c(5,5,5,5))
box("figure")
dev.off()
# Estimator 1: Mplus 8:
res_Mplus <- mlVAR(Data, vars, idvar, lags = 1,
temporal = "correlated", contemporaneous = "fixed",
estimator = "Mplus", nCores = 3)
pdf("Figure6_Mplus.pdf",width=9,height=3)
layout(t(1:3))
plot(res_Mplus, "temporal", layout = "circle", nonsig = "hide", theme = "colorblind", title = "Temporal",
labels = vars, vsize = 20, rule = "and", asize = 10, mar = c(5,5,5,5))
box("figure")
plot(res_Mplus, "contemporaneous", layout = "circle", nonsig = "hide", theme = "colorblind", title = "Contemporaneous",
labels = vars, vsize = 20, rule = "and", asize = 10, mar = c(5,5,5,5))
box("figure")
plot(res_Mplus, "between", layout = "circle", nonsig = "hide",  theme = "colorblind", title = "Between-subjects",
labels = vars, vsize = 20, rule = "and", asize = 10, mar = c(5,5,5,5))
box("figure")
dev.off()
# Estimator 1: Mplus 8:
res_Mplus <- mlVAR(Data, vars, idvar, lags = 1,
temporal = "correlated", contemporaneous = "fixed",
estimator = "Mplus", nCores = 3)
# Estimator 1: Mplus 8:
res_Mplus <- mlVAR(Data, vars, idvar, lags = 1,
temporal = "correlated", contemporaneous = "fixed",
estimator = "Mplus", nCores = 3)
pdf("Figure6_Mplus.pdf",width=9,height=3)
layout(t(1:3))
plot(res_Mplus, "temporal", layout = "circle", nonsig = "hide", theme = "colorblind", title = "Temporal",
labels = vars, vsize = 20, rule = "and", asize = 10, mar = c(5,5,5,5))
box("figure")
plot(res_Mplus, "contemporaneous", layout = "circle", nonsig = "hide", theme = "colorblind", title = "Contemporaneous",
labels = vars, vsize = 20, rule = "and", asize = 10, mar = c(5,5,5,5))
box("figure")
plot(res_Mplus, "between", layout = "circle", nonsig = "hide",  theme = "colorblind", title = "Between-subjects",
labels = vars, vsize = 20, rule = "and", asize = 10, mar = c(5,5,5,5))
box("figure")
dev.off()
# Load packages:
library("mlVAR")
library("graphicalVAR")
library("qgraph")
# Read the data:
url <- "http://journals.plos.org/plosone/article/file?id=10.1371/journal.pone.0060188.s004&type=supplementary"
Data <- subset(read.table(url, header = TRUE, sep = ","), st_period == 0)[,-c(4,5,12)]
# Rename with English names:
names(Data) <- c("id","day","beep","cheerful","pleasant","worry","fearful","sad","relaxed")
# Input:
vars <- c("cheerful","pleasant","worry","fearful","sad","relaxed")
idvar <- "id"
# We do not need beepvar and dayvar arguments because the data is neatly pre-processed. Every beep is included even if responses are missing, and a row of NA responses is included between each day.
# Estimator 1: Mplus 8:
res_Mplus <- mlVAR(Data, vars, idvar, lags = 1,
temporal = "correlated", contemporaneous = "fixed",
estimator = "Mplus", nCores = 3)
pdf("Figure6_Mplus.pdf",width=9,height=3)
layout(t(1:3))
plot(res_Mplus, "temporal", layout = "circle", nonsig = "hide", theme = "colorblind", title = "Temporal",
labels = vars, vsize = 20, rule = "and", asize = 10, mar = c(5,5,5,5))
box("figure")
plot(res_Mplus, "contemporaneous", layout = "circle", nonsig = "hide", theme = "colorblind", title = "Contemporaneous",
labels = vars, vsize = 20, rule = "and", asize = 10, mar = c(5,5,5,5))
box("figure")
plot(res_Mplus, "between", layout = "circle", nonsig = "hide",  theme = "colorblind", title = "Between-subjects",
labels = vars, vsize = 20, rule = "and", asize = 10, mar = c(5,5,5,5))
box("figure")
dev.off()
